/***************************************************************************
                          wcurveview.h  -  description
                             -------------------
    begin                : Thu Feb 21 13:34:41 MST 2002
    copyright            : (C) 2002 by Joseph Ruscio
    email                : ruscjos@iit.edu
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

#ifndef WCURVEVIEW_H
#define WCURVEVIEW_H

// include files for Qt
#include <qwidget.h>
#include "wcurvedata.h"

class WcurveDoc;

/**
 * This class provides an incomplete base for your application view.
 * 	
 * @author Source Framework Automatically Generated by KDevelop, (c) The KDevelop Team.
 * @version KDevelop version 1.1 code generation
 */
class WcurveView{

  friend class WcurveDoc;

  public:
    /** Constructor for the view
    	* @param pDoc  your document instance that the view represents. Create a document before calling the constructor
    	* or connect an already existing document to a new MDI child widget.*/
  WcurveView(WcurveDoc* pDoc, ViewID key);
  WcurveView();
  /** Destructor for the main view */
  virtual ~WcurveView();
  /** returns a pointer to the document connected to the view*/
  WcurveDoc *getDocument() const;
  /** gets called to redraw the document contents if it has been modified */
  virtual void update(WcurveView* pSender);
  /** gets called to redraw the document contents without recalculating curve info */
  virtual void refresh();
  /** called to print the view */
  void print(QPrinter *pPrinter);
  /** returns the m_key value */
  ViewID key(){return m_key;}
  /** Called when the model data in the document has changed */
  virtual void update();
  /***************HACK****************************/
  /** HACK to avoid multiple inheritance lattice */
  virtual void setCaption(QString) = 0;
  /** HACK to avoid multiple inheritance lattice */
  virtual bool isActiveWindow() = 0;
  /** HACK to avoid multiple inheritance lattice */
  virtual bool close() = 0;
  /** HACK to avoid multiple inheritance lattice */
  virtual void showMaximized() = 0;
  /** HACK to avoid multiple inheritance lattice */
  virtual void setFocus() = 0;
  /** HACK to avoid multiple inheritance lattice */
  virtual void show() = 0;
  /** HACK to avoid multiple inheritance lattice */
  virtual void installEventFilter ( const QObject * obj ) = 0;
  /** HACK to avoid multiple inheritance lattice */
  virtual void setGeometry( const QRect &) =0;

  protected:
  virtual void closeEvent(QCloseEvent*);
  /** virtual template method that children must provide to facilitate printing */
  virtual void print_contents(QPainter p)=0;
  /** virtual template method that children must provide to facilitate updating */
  virtual void updateView() = 0;
  /** virtual template method that children must provide to facilitate animation */
  virtual void refreshView() = 0;

  protected: // Private attributes
  /** The document this view represents */
  WcurveDoc *doc;
  /** The model data that we use to plot the W-curve */
  WcurveData m_data;
  /** This holds the key value that identifies the type of wcurve this is.
  Used only for the case when a view is selected and we need to
  update the list. */
  ViewID m_key;
};
#endif
